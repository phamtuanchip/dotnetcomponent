@model MVC01.Models.ReminderTask

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet"
      href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
 

<!-- Optional: Include the jQuery library -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.1/jquery-ui.min.js"></script>
<link rel="stylesheet"
      href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.1/themes/base/minified/jquery-ui.min.css">


<script type="text/javascript" src="https://www.google.com/jsapi"></script>
 
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?v=3&key=AIzaSyAdm1NhUYT7jonRRieUPnLSWw-yCxJRcd8&sensor=false&libraries=places"></script>
 

<style>
    .Alert {
        margin: 3px;
        width: 40px;
        height: 40px;
        position: absolute;
        left: 60px;
        top: 10px;
        background: green;
        display: none;
    }

        .Alert.newcolor {
            background: blue;
        }

    p {
        color: red;
    }

    .Finished {
        text-decoration: line-through;
    }
</style>

<script>
var operation = "A"; //"A"=Adding; "E"=Editing
	var selected_index = -1; //Index of the selected list item
	var tbClients = localStorage.getItem("tbClients");//Retrieve the stored data
	tbClients = JSON.parse(tbClients); //Converts string to object
	if(tbClients == null) //If there is no data, initialize an empty array
		tbClients = [];

$(function(){
	if(typeof(Storage) !== "undefined") {
    // Code for localStorage/sessionStorage.
	console.log("save avaiable");
	} else {
		// Sorry! No Web Storage support..
		console.log("your browser does not support");
	}


var div = $(".Alert");
function runIt(){
div
.show( "slow" )
.animate({ left: "+=200" }, 2000 )
.slideToggle( 1000 )
.slideToggle( "fast" )
.animate({ left: "-=200" }, 1500 )
.hide( "slow" )
.show( 1200 )
.slideUp( "normal", runIt );
}
function showIt() {
var n = div.queue( "fx" );
//$("span" ).text( n.length );
setTimeout( showIt, 100 );
}

 $("#addbtn").off().on("click", function add(){

   Add();
   List();
  $("#taskform")[0].reset();
  if($("#mappicker").css('display') === "block"){
	$("#mappicker").css('display', 'none');
  }
 });

	 $("#edit").bind("click", function(){
		operation = "E";
		selected_index = parseInt($(this).attr("alt").replace("Edit", ""));
		var cli = JSON.parse(tbClients[selected_index]);
		//$("#txtID").val(cli.ID);
		$("#task").val(cli.Name);
		$("#priority").val(cli.PRI);
		$("#remind").attr("checked","checked");
		$("#task").focus();
	});

	$("#delete").bind("click", function(){
		selected_index = parseInt($(this).attr("alt").replace("Delete", ""));
		Delete();
	});
	$("#Done").bind("click", function(){
		selected_index = parseInt($(this).attr("alt").replace("Done", ""));
		Done();
	});

	$("#remind").bind("click", function(){
		$("#mappicker").toggle();
		console.log($("#mappicker").css('display') === "block");
		if($("#mappicker").css('display') === "block"){
			$("#search").click();
		}
	});

 List();

   

  //runIt();
 // showIt();

});

function Add(){
	var index = $("#data").find("tr").size();
	var task = $("#task").val();
	var priority = $("#priority").val();
	var isReminde = $("#remind").is(":checked");
	var date = $("#date").val();
	var address = "";
	var address_lat = "";
	var address_lgn = "";
	if(isReminde){
	 address = $("#address").val();
	 address_lat = $("#address_lat").val();
	 address_lgn = $("#address_lgn").val();
	}
    //{"ReminderTaskId":0,"LocId":0,"Title":null,"RemindDate":"0001-01-01T00:00:00","GeoLocaltion":null,"Priority":0,"isRemind":false}
	var client = JSON.stringify({
	    ReminderTaskId: index,
	    Title: task,
	    Priority: priority,
	    RemindDate: date,
		isRemind: isReminde,
		Remided: 'false',
		GeoLocaltion: {
		    // GeoLocaltionId: id,
		    place: address,
		    Latitude: address_lat,
		    Longitude: address_lgn
		}
	});
	tbClients.push(client);
	var db = JSON.stringify(tbClients);
	localStorage.setItem("tbClients", db);

	console.log("The data was saved." + db);
	$.ajax({
	    type: 'POST',
	    url: "/api/Restful/AddTask",
	    data: db,
	    contentType: "application/json",
	    dataType: "application/json",
	    success: function (resultData) {
	        
	        console.log("The data was saved onto server ." +resultData);
	    },
	    error: function (err) {
	        console.log(err);
	    }
	});
	 
}

function Edit(element){
	var selected_index = parseInt($(element).attr("alt").replace("Edit", ""));
	tbClients[selected_index] = JSON.stringify({
	    ReminderTaskId: index,
	    Title: task,
	    Priority: priority,
	    isRemind: isReminde
		});//Alter the selected item on the table
	localStorage.setItem("tbClients", JSON.stringify(tbClients));
	console.log("The data was edited.")
	operation = "A"; //Return to default value
	return true;
}

 function Done(element){
   var selected_index = parseInt($(element).attr("alt").replace("Done", ""));

 	var cli = JSON.parse(tbClients[selected_index]);
	if(cli.Remided == 'false') cli.Remided = true;
	var client = JSON.stringify({
	    ReminderTaskId: cli.ID,
	    Title: cli.Name,
	    Priority: cli.PRI,
	    RemindDate: cli.Date,
	    isRemind: cli.Remide,
	    Remided: cli.Remided,
	    GeoLocaltion: {
	        //GeoLocaltionId: id,
	        place: cli.Add,
	        Latitude: cli.Lat,
	        Longitude: cli.Lgn
	    } 
	    
	});
	console.log("is reminded " + cli.Remided);
	tbClients.splice(selected_index, 1);
	tbClients.push(client);
	localStorage.setItem("tbClients", JSON.stringify(tbClients));


	//localStorage.setItem("tbClients", JSON.stringify(tbClients));
	reloadDb();
	console.log("The data was edited.")
	operation = "A"; //Return to default value
	return true;
}
 function Delete(element){
	var selected_index = parseInt($(element).attr("alt").replace("Delete", ""));
	tbClients.splice(selected_index, 1);
	localStorage.setItem("tbClients", JSON.stringify(tbClients));
	reloadDb();
	console.log("Client deleted.");
}
function reloadDb(){
	$("#data").find("tr:gt(0)").remove();
	List();
}

$("#taskform").bind("submit",function(){
	if(operation == "A")
		return Add();
	else
		return Edit();
});



    //{"ReminderTaskId":0,"GeoLocaltionId":0,"Title":null,"RemindDate":"0001-01-01T00:00:00","GeoLocaltion":{"GeoLocaltionId":0,"Longitude":0.0,"Latitude":0.0,"place":null},"Priority":0,"isRemind":false,"Remided":false}
 function List(){
	console.log("load data");
	$("#data").find("tr:gt(0)").remove();
	for(var i in tbClients){
	    console.log("iii " +i);
		var cli = JSON.parse(tbClients[i]);
		var finished = "";

		if(cli.Remided == true){finished = "Finished";}

		var row = '<tr><td>' + cli.ReminderTaskId + '</td><td class="' + finished + '">' + cli.Title + '</td><td>' + cli.RemindDate + '</td><td>' + cli.Priority + '</td><td>' + cli.GeoLocaltion(0).place + '</td><td><span alt="Done' + i + '" onclick="javaScript:Done(this);">Done</span>|<span alt="Edit' + i + '" onclick="javaScript:Edit(this);">Edit</span>|<span id="delete" alt="Delete' + i + '"  onclick="javaScript:Delete(this);">Delete</span></td></tr>'

	  	$("#data").append(row);
	}


 
function verifyAddress(){
	return true;
}
}



</script>

 <div class="Alert"></div>
 <div class="container">
     <p>Create task management: test commit</p>


     <form class="form-inline" role="form" id="taskform">
         <div class="form-group">
             <label for="task">New task</label> <input type="text"
                 class="form-control" id="task" required="required" />
         </div>
         <div class="form-group">
             <label for="date">Date</label> <input type="date"
                 class="form-control" id="date" required="required" />
         </div>
         <div class="form-group">
             <label for="priority">Priority</label> <input type="number"
                 class="form-control" id="priority" value="1" />
         </div>
         <div class="form-group">
             <input type="checkbox" class="form-control" id="remind"> <label
                 for="remind"> Remind</label>
         </div>
         <button type="button" class="btn btn-default" id="addbtn">Save</button>
     </form>
     <div class="form-group" id="mappicker" style="display: none;">
         <label for="address">when I am arrive</label> <input type="text"
             class="form-control" id="address" value="Hanoi, Vietnam" /> <input
             type="hidden" class="form-control" id="address_lat" /> <input
             type="hidden" class="form-control" id="address_lgn" /> <label
             for="priority">radius</label> <input type="number"
             class="form-control" id="radius" value="100" />

         <button type="button" class="btn btn-default" id="search">search</button>
         <center>
             <div id="map-canvas"
                 style="height: 600px; width: 800px; margin: 0; padding: 0;"></div>
         </center>
     </div>


     <div class="table-responsive">
         <table class="table table-striped table-bordered" id="data">
             <thead>
                 <tr>
                     <th>#</th>
                     <th>Task</th>
                     <th>Date</th>
                     <th>Priority</th>
                     <th>Where</th>

                     <th>Action</th>
                 </tr>
             </thead>
             <tbody>

             </tbody>
         </table>
     </div>

 </div>


 