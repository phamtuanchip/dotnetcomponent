@using PagedList.Mvc;
@using PagedList;
 
@model PagedList.IPagedList<MVC01.Models.Album>


@helper Truncate(String input, int length) {
if (input.Length <= length)
{
        @input
}
else {
    @input.Substring(0, length)<text>...</text>
}
}
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
    @using (Html.BeginForm("Index", "StoreManager", FormMethod.Get))
    {
    <p>
        Find by Tile: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
    }
</p>
<table class="table">
    <tr>
        <th>
            #
        </th>
        <th>
           @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm , currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
            @Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
           Cover
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Genre.Name)
        </td>
        <td>
            @Truncate(item.Artist.Name, 25)
        </td>
        <td>
           @Truncate(item.Title, 25)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
           <img  src="@Html.DisplayFor(modelItem => item.AlbumArtUrl)" />
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.AlbumId }) |
            @Html.ActionLink("Details", "Details", new { id=item.AlbumId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.AlbumId })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))